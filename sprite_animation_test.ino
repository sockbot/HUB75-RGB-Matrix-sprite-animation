#include <Adafruit_GFX.h>   // Core graphics library
#include <RGBmatrixPanel.h> // Hardware-specific library

// Color definitions
#define RED      matrix.Color333(1,0,0) // matrix.Color888(248,56,0)
#define BROWN    matrix.Color888(172,124,0)
#define TAN      matrix.Color888(255,164,64)
#define GREEN    matrix.Color888(0,183,0)
#define WHITE    matrix.Color888(255,255,255)

#define CLK 8  // MUST be on PORTB! (Use pin 11 on Mega)
#define LAT 10
#define OE  9
#define A   A0
#define B   A1
#define C   A2
RGBmatrixPanel matrix(A, B, C, CLK, LAT, OE, false);

// Jumping sprite
const unsigned char jump_red [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x0f, 0xe0, 0x1f, 0xe0, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x20, 0x01, 0xa0, 0x00, 0x90, 
0x00, 0xd0, 0x00, 0xc8, 0x01, 0xe0, 0x03, 0xb8, 0x07, 0xf8, 0x0f, 0xf8, 0x1f, 0xf8, 0x1f, 0xf0, 
0x0f, 0xf0, 0x13, 0xf0, 0x1c, 0xf0, 0x1f, 0x30, 0x1f, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char jump_brown [] PROGMEM = {
0x00, 0x00, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x03, 0x1c, 0x8f, 0x24, 0x83, 
0x26, 0x01, 0x26, 0x21, 0x60, 0xfe, 0x78, 0x7a, 0x18, 0x06, 0x00, 0xde, 0x7e, 0x5c, 0xff, 0x6c, 
0xff, 0x28, 0xcf, 0x30, 0x86, 0x10, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x0f, 
0x10, 0x0f, 0xec, 0x0f, 0xe3, 0x0f, 0xe0, 0x0f, 0xe0, 0x00, 0xe0, 0x00, 0xc0, 0x00, 0x80, 0x00, 
};

const unsigned char jump_tan [] PROGMEM = {
0x00, 0x0e, 0x00, 0x1b, 0x00, 0x19, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x70, 0x1b, 0x7c, 
0x19, 0xfe, 0x19, 0xde, 0x1f, 0x00, 0x07, 0x84, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x30, 0x00, 0x78, 0x08, 0xf8, 0x40, 0xf8, 0x00, 0xb0, 0x00, 0x60, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

// Running sprite frame A
const unsigned char run_a_red [] PROGMEM = {
0x03, 0xe0, 0x0f, 0xc0, 0x1f, 0x80, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x20, 0x01, 0x90, 0x00, 0xd0, 0x00, 0xc8, 
0x00, 0xc8, 0x01, 0xc8, 0x03, 0xa0, 0x0f, 0xf8, 0x07, 0xf8, 0x07, 0xf8, 0x0f, 0xf8, 0x0f, 0xe0, 
0x17, 0xe0, 0x1b, 0xe0, 0x1c, 0xe0, 0x0f, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char run_a_brown [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x80, 0x24, 0xc0, 0x26, 0x00, 0x66, 0x20, 
0x60, 0xfc, 0x70, 0x7c, 0x18, 0x00, 0x07, 0x00, 0x00, 0xc0, 0x1e, 0x60, 0x3f, 0x28, 0x7f, 0x30, 
0x7f, 0x35, 0x7e, 0x36, 0xfc, 0x14, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x1f, 
0x08, 0x1f, 0x24, 0x1f, 0xe3, 0x1f, 0xf0, 0x1f, 0xf8, 0x00, 0x70, 0x00, 0x70, 0x00, 0x38, 0x00, 
};

const unsigned char run_a_tan [] PROGMEM = {
0x00, 0x00, 0x00, 0x20, 0x00, 0x60, 0x00, 0x00, 0x03, 0x70, 0x1b, 0x3c, 0x19, 0xfe, 0x19, 0xde, 
0x1f, 0x00, 0x0f, 0x80, 0x07, 0xf8, 0x00, 0xc0, 0x00, 0x02, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 
0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0xf8, 0x00, 0xf8, 0x00, 0xf0, 0x00, 0x70, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
};

// Running sprite frame B
const unsigned char run_b_red [] PROGMEM = {
0x00, 0x00, 0x01, 0xf0, 0x07, 0xe0, 0x0f, 0xc0, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x04, 0xc0, 0x08, 0x60, 0x08, 0x60, 
0x08, 0x70, 0x08, 0x00, 0x08, 0x00, 0x18, 0x04, 0x1c, 0x06, 0x1e, 0x0e, 0x1f, 0x9e, 0x0f, 0x8c, 
0x07, 0x00, 0x06, 0x00, 0x03, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char run_b_brown [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x40, 0x12, 0x60, 0x13, 0x00, 
0x33, 0x10, 0x30, 0x7e, 0x18, 0x3e, 0x0c, 0x00, 0x00, 0x00, 0x0b, 0x30, 0x17, 0x90, 0x17, 0x98, 
0x17, 0x88, 0x17, 0xc8, 0x17, 0x80, 0x07, 0x80, 0x03, 0x80, 0x01, 0x80, 0x00, 0x60, 0x00, 0x70, 
0x00, 0xfc, 0x01, 0xf8, 0x00, 0xf0, 0x02, 0x38, 0x03, 0xd8, 0x07, 0xc0, 0x07, 0xf0, 0x01, 0xf0, 
};

const unsigned char run_b_tan [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x30, 0x00, 0x00, 0x01, 0xb8, 0x0d, 0x9e, 0x0c, 0xff, 
0x0c, 0xef, 0x0f, 0x80, 0x07, 0xc0, 0x03, 0xfc, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x30, 0x00, 0x78, 0x00, 0x78, 0x00, 0x78, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

// Running sprite frame C
const unsigned char run_c_red [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x07, 0xe0, 0x0f, 0xc0, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x08, 0x80, 0x08, 0x40, 
0x08, 0x30, 0x18, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1e, 0x00, 0x1f, 0x88, 0x1f, 0xf8, 0x1f, 0xf0, 
0x0f, 0xec, 0x0f, 0x9c, 0x0f, 0x78, 0x0e, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char run_c_brown [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x40, 0x12, 0x60, 
0x13, 0x00, 0x33, 0x10, 0x30, 0x7e, 0x18, 0x3e, 0x04, 0x00, 0x08, 0x00, 0x17, 0x40, 0x17, 0xa0, 
0x37, 0xc0, 0x27, 0xf0, 0x23, 0xf0, 0x03, 0xf8, 0x01, 0xf8, 0x00, 0x70, 0x00, 0x00, 0x00, 0x08, 
0xf0, 0x10, 0xf0, 0x60, 0xf0, 0x80, 0xf0, 0x00, 0xf0, 0x78, 0xc0, 0x78, 0x80, 0x7e, 0x00, 0x7e, 
};

const unsigned char run_c_tan [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x30, 0x00, 0x00, 0x01, 0xb8, 0x0d, 0x9e, 
0x0c, 0xff, 0x0c, 0xef, 0x0f, 0x80, 0x07, 0xc0, 0x03, 0xfc, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x0c, 0x00, 0x0f, 0x00, 0x0f, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

void setup() {
  matrix.begin();
  matrix.setRotation(1); // rotate 90 degrees
  drawMarioJump();
  delay(3000);
  matrix.fillScreen(0);
}

void drawMarioJump() {
  matrix.drawBitmap(0, 0, jump_red, matrix.width(), matrix.height(), WHITE);
  matrix.drawBitmap(0, 0, jump_brown, matrix.width(), matrix.height(), GREEN);
  matrix.drawBitmap(0, 0, jump_tan, matrix.width(), matrix.height(), TAN);
}

void drawMarioRunA() {
  matrix.drawBitmap(0, 0, run_a_red, matrix.width(), matrix.height(), WHITE);
  matrix.drawBitmap(0, 0, run_a_brown, matrix.width(), matrix.height(), GREEN);
  matrix.drawBitmap(0, 0, run_a_tan, matrix.width(), matrix.height(), TAN);
}

void drawMarioRunB() {
  matrix.drawBitmap(0, 0, run_b_red, matrix.width(), matrix.height(), WHITE);
  matrix.drawBitmap(0, 0, run_b_brown, matrix.width(), matrix.height(), GREEN);
  matrix.drawBitmap(0, 0, run_b_tan, matrix.width(), matrix.height(), TAN);
}

void drawMarioRunC() {
  matrix.drawBitmap(0, 0, run_c_red, matrix.width(), matrix.height(), WHITE);
  matrix.drawBitmap(0, 0, run_c_brown, matrix.width(), matrix.height(), GREEN);
  matrix.drawBitmap(0, 0, run_c_tan, matrix.width(), matrix.height(), TAN);
}

void loop() {
  int d = 100;
  matrix.fillScreen(0);
  drawMarioRunA();
  delay(d);
  matrix.fillScreen(0);
  drawMarioRunB();
  delay(d);  
  matrix.fillScreen(0);
  drawMarioRunC();
  delay(d);
    matrix.fillScreen(0);
  drawMarioRunB();
  delay(d);
}
